name: Prod-V2-Terraform-Plan

on:
  pull_request:
    branches:
      - main
    paths:
      - 'prod-v2/**'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  Terraform-Plan:
    runs-on: ubuntu-latest
    name: Run Terraform Plan for Production V2
    steps:
      - name: Checkout files
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Cache Terraform plugins
        uses: actions/cache@v3
        with:
          path: |
            ~/.terraform.d/plugin-cache
            prod-v2/.terraform
          key: ${{ runner.os }}-terraform-prod-v2-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-prod-v2-
            
      - name: Terraform Init
        working-directory: prod-v2
        run: terraform init 

      - name: Terraform fmt check
        working-directory: prod-v2
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Validate
        working-directory: prod-v2
        run: terraform validate

      - name: Terraform Plan
        working-directory: prod-v2
        run: terraform plan -no-color -out=tfplan
        env:
          TF_VAR_supabase_url: ${{ secrets.SUPABASE_URL }}
          TF_VAR_supabase_service_key: ${{ secrets.SUPABASE_SERVICE_KEY }}
          TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          TF_VAR_eleven_api_key: ${{ secrets.ELEVEN_API_KEY }}
          TF_VAR_eleven_voice_id: ${{ secrets.ELEVEN_VOICE_ID }}
          TF_VAR_wp_site_url: ${{ secrets.WP_SITE_URL }}
          TF_VAR_wp_api_username: ${{ secrets.WP_API_USERNAME }}
          TF_VAR_wp_api_application_password: ${{ secrets.WP_API_APPLICATION_PASSWORD }}
          TF_VAR_google_credentials_json: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
          TF_VAR_database_url: ${{ secrets.DATABASE_URL }}
          TF_VAR_ai-tutor_image_tag: "latest"
          TF_VAR_db_mcp_server_tag: "latest"
          TF_VAR_ssl_certificate_arn: "arn:aws:acm:us-east-1:342834686411:certificate/e687717b-da1f-431a-94eb-76f6a5e21ea4"
          TF_VAR_cloudfront_aliases: '["learn.dil.org", "www.learn.dil.org"]'
          TF_CLI_ARGS: "-lock-timeout=300s"

      - name: Save Plan
        uses: actions/upload-artifact@v3
        with:
          name: prod-v2-tfplan
          path: prod-v2/tfplan
          retention-days: 5

      - name: Comment Plan on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('prod-v2/tfplan.txt', 'utf8');
            const output = `#### Terraform Plan for Production V2 ðŸ“‹
            \`\`\`
            ${plan}
            \`\`\`
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
        continue-on-error: true

